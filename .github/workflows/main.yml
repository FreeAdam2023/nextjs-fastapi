name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Step 1: 代码检查
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # ESLint for Next.js
      - name: Run ESLint
        run: |
          cd src  # 更新路径为 src
          pnpm install  # 使用 pnpm
          pnpm lint  # 确保在 package.json 中有 "lint" 脚本

      # Flake8 for FastAPI
      - name: Run Flake8
        run: |
          cd api  # 更新路径为 api
          pip install -r requirements.txt
          flake8 .

  # Step 2: 测试前端和后端
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # 安装依赖并运行 Next.js 测试
      - name: Install Next.js dependencies and run tests
        run: |
          cd src  # 更新路径为 src
          pnpm install  # 使用 pnpm
          pnpm test  # 确保在 package.json 中有 "test" 脚本

      # 安装依赖并运行 FastAPI 测试
      - name: Install FastAPI dependencies and run tests
        run: |
          cd api  # 更新路径为 api
          pip install -r requirements.txt
          pytest

  # Step 3: 构建 Docker 镜像
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t my-nextjs-docker:latest -f ./src/Dockerfile ./src  # 确保路径为 src 目录下的 Dockerfile




