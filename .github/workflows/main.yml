name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Step 1: 构建前端和后端
  frontend_build:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install pnpm
        run: |
          npm install -g pnpm
      - name: Build frontend
        run: |
          cd src
          pnpm install
          pnpm build

  backend_build:
    name: Backend Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build backend
        run: |
          cd api
          pip install -r requirements.txt
          # Build steps if required, e.g., docker build or other commands

  # Step 2: 前端和后端单元测试（并行执行）
  frontend_test_a:
    name: Frontend Unit Test A
    runs-on: ubuntu-latest
    needs: frontend_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Frontend Unit Test A
        run: |
          cd src
          pnpm install
          pnpm test

  frontend_test_b:
    name: Frontend Unit Test B
    runs-on: ubuntu-latest
    needs: frontend_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Frontend Unit Test B
        run: |
          cd src
          pnpm install
          pnpm test

  backend_test_a:
    name: Backend Unit Test A
    runs-on: ubuntu-latest
    needs: backend_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Backend Unit Test A
        run: |
          cd api
          pip install -r requirements.txt
          pytest

  backend_test_b:
    name: Backend Unit Test B
    runs-on: ubuntu-latest
    needs: backend_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Backend Unit Test B
        run: |
          cd api
          pip install -r requirements.txt
          pytest

  # Step 3: 部署到 Staging
  deploy_staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    needs: [frontend_test_a, frontend_test_b, backend_test_a, backend_test_b]
    steps:
      - name: Deploy to Staging
        run: echo "Deploying to Staging at https://www.staging.interstellar.dev"
        # 添加你的实际部署命令，例如使用 Terraform、kubectl、SSH 等

  # Step 4: 部署到 Production
  deploy_production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: deploy_staging
    steps:
      - name: Deploy to Production
        run: echo "Deploying to Production"
        # 添加你的实际生产环境部署命令
