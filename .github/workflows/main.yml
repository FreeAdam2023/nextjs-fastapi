name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Step 1: 代码检查
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # ESLint for Next.js
      - name: Run ESLint
        run: |
          cd frontend
          npm install
          npm run lint

      # Flake8 for FastAPI
      - name: Run Flake8
        run: |
          cd backend
          pip install -r requirements.txt
          flake8 .

  # Step 2: 测试前端和后端
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # 安装依赖并运行 Next.js 测试
      - name: Install Next.js dependencies and run tests
        run: |
          cd frontend
          npm install
          npm run test

      # 安装依赖并运行 FastAPI 测试
      - name: Install FastAPI dependencies and run tests
        run: |
          cd backend
          pip install -r requirements.txt
          pytest

  # Step 3: 构建 Docker 镜像
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build frontend Docker image
        run: |
          docker build -t my-frontend-image:latest -f frontend/Dockerfile .

      - name: Build backend Docker image
        run: |
          docker build -t my-backend-image:latest -f backend/Dockerfile .

  # Step 4: 端到端测试
  e2e_test:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: build
    services:
      frontend:
        image: my-frontend-image:latest
        options: --network-alias frontend
        ports:
          - 3000:3000
      backend:
        image: my-backend-image:latest
        options: --network-alias backend
        ports:
          - 8000:8000
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run End-to-End Tests
        run: |
          cd e2e_tests
          npm install
          npm run test:e2e

  # Step 5: 发布镜像到云端
  deploy:
    name: Deploy to Cloud
    runs-on: ubuntu-latest
    needs: [build, e2e_test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images
        run: |
          docker tag my-frontend-image:latest ${{ secrets.DOCKER_USERNAME }}/my-frontend-image:latest
          docker tag my-backend-image:latest ${{ secrets.DOCKER_USERNAME }}/my-backend-image:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-frontend-image:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-backend-image:latest
